<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="1100" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .box { fill: #e3f2fd; stroke: #1976d2; stroke-width: 2; rx: 8; }
      .start-box { fill: #c8e6c9; stroke: #388e3c; stroke-width: 2; rx: 8; }
      .process-box { fill: #fff3e0; stroke: #f57c00; stroke-width: 2; rx: 8; }
      .decision-box { fill: #fce4ec; stroke: #c2185b; stroke-width: 2; rx: 8; }
      .builtin-box { fill: #e8f5e8; stroke: #4caf50; stroke-width: 2; rx: 8; }
      .fork-box { fill: #ffebee; stroke: #f44336; stroke-width: 2; rx: 8; }
      .final-box { fill: #c8e6c9; stroke: #388e3c; stroke-width: 3; rx: 8; }
      .text { font-family: Arial, sans-serif; font-size: 11px; text-anchor: middle; fill: #333; }
      .small-text { font-family: Arial, sans-serif; font-size: 9px; text-anchor: middle; fill: #333; }
      .title { font-family: Arial, sans-serif; font-size: 13px; font-weight: bold; text-anchor: middle; fill: #333; }
      .arrow { stroke: #333; stroke-width: 2; marker-end: url(#arrowhead); }
      .yes-arrow { stroke: #4caf50; stroke-width: 2; marker-end: url(#arrowhead); }
      .no-arrow { stroke: #f44336; stroke-width: 2; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="400" y="25" class="title" font-size="18">Minishell Execution Schema</text>
  
  <!-- Input from Parsing -->
  <rect x="280" y="50" width="240" height="40" class="start-box"/>
  <text x="400" y="75" class="title">Parsed Token List (from parsing)</text>
  
  <!-- Convert to Exec Structure -->
  <rect x="250" y="120" width="300" height="40" class="process-box"/>
  <text x="400" y="145" class="title">Convert to Exec (convert_token_to_exec)</text>
  
  <rect x="50" y="190" width="120" height="30" class="box"/>
  <text x="110" y="210" class="text">Create Nodes</text>
  
  <rect x="190" y="190" width="120" height="30" class="box"/>
  <text x="250" y="210" class="text">Fill Node Data</text>
  
  <rect x="330" y="190" width="140" height="30" class="box"/>
  <text x="400" y="210" class="text">Handle Redirects</text>
  
  <rect x="490" y="190" width="120" height="30" class="box"/>
  <text x="550" y="210" class="text">Setup Pipes</text>
  
  <!-- Exec List -->
  <rect x="280" y="260" width="240" height="40" class="decision-box"/>
  <text x="400" y="285" class="title">Execution List (t_exec *)</text>
  
  <!-- Execution Start -->
  <rect x="300" y="330" width="200" height="40" class="process-box"/>
  <text x="400" y="355" class="title">Start Execution</text>
  
  <!-- Decision Diamond -->
  <polygon points="400,380 450,410 400,440 350,410" class="decision-box"/>
  <text x="400" y="415" class="text">Single Builtin?</text>
  
  <!-- Builtin Path -->
  <rect x="150" y="480" width="140" height="40" class="builtin-box"/>
  <text x="220" y="505" class="title">Execute Builtin</text>
  
  <rect x="150" y="550" width="140" height="80" class="box" fill="#f5f5f5"/>
  <text x="220" y="570" class="title">Builtin Commands:</text>
  <text x="220" y="585" class="small-text">• cd, echo, env</text>
  <text x="220" y="600" class="small-text">• export, unset</text>
  <text x="220" y="615" class="small-text">• pwd, exit</text>
  
  <!-- External Command Path -->
  <rect x="450" y="480" width="140" height="40" class="fork-box"/>
  <text x="520" y="505" class="title">Fork Loop</text>
  
  <rect x="380" y="550" width="100" height="30" class="fork-box"/>
  <text x="430" y="570" class="text">Create Pipes</text>
  
  <rect x="500" y="550" width="100" height="30" class="fork-box"/>
  <text x="550" y="570" class="text">Fork Process</text>
  
  <!-- Child Process -->
  <rect x="320" y="620" width="120" height="30" class="box"/>
  <text x="380" y="640" class="text">Child Process</text>
  
  <rect x="250" y="670" width="100" height="25" class="box"/>
  <text x="300" y="687" class="small-text">Setup Child</text>
  
  <rect x="370" y="670" width="100" height="25" class="box"/>
  <text x="420" y="687" class="small-text">Find CMD Path</text>
  
  <rect x="310" y="710" width="120" height="25" class="box"/>
  <text x="370" y="727" class="small-text">Call execve()</text>
  
  <!-- Parent Process -->
  <rect x="480" y="620" width="120" height="30" class="box"/>
  <text x="540" y="640" class="text">Parent Process</text>
  
  <rect x="480" y="670" width="120" height="30" class="box"/>
  <text x="540" y="690" class="text">Wait Children</text>
  
  <!-- Final Result -->
  <rect x="280" y="780" width="240" height="50" class="final-box"/>
  <text x="400" y="805" class="title">Command Result</text>
  <text x="400" y="820" class="text">(Exit Status &amp; Output)</text>
  
  <!-- Data Structure Info -->
  <rect x="50" y="850" width="320" height="150" class="box" fill="#f5f5f5"/>
  <text x="210" y="870" class="title">t_exec Structure</text>
  
  <text x="70" y="890" class="small-text" text-anchor="start">typedef struct s_exec {</text>
  <text x="80" y="905" class="small-text" text-anchor="start">int fd_in, fd_out;</text>
  <text x="80" y="920" class="small-text" text-anchor="start">char *cmd;</text>
  <text x="80" y="935" class="small-text" text-anchor="start">char **cmd_args;</text>
  <text x="80" y="950" class="small-text" text-anchor="start">struct s_exec *next;</text>
  <text x="80" y="965" class="small-text" text-anchor="start">int flag;</text>
  <text x="70" y="980" class="small-text" text-anchor="start">} t_exec;</text>
  
  <!-- FD Management Info -->
  <rect x="430" y="850" width="320" height="150" class="box" fill="#f5f5f5"/>
  <text x="590" y="870" class="title">File Descriptor Management</text>
  
  <text x="450" y="890" class="small-text" text-anchor="start">• STDIN (0) - Standard Input</text>
  <text x="450" y="905" class="small-text" text-anchor="start">• STDOUT (1) - Standard Output</text>
  <text x="450" y="920" class="small-text" text-anchor="start">• STDERR (2) - Standard Error</text>
  <text x="450" y="935" class="small-text" text-anchor="start">• Pipe FDs - Inter-process communication</text>
  <text x="450" y="950" class="small-text" text-anchor="start">• Redirection FDs - File I/O</text>
  <text x="450" y="965" class="small-text" text-anchor="start">• Heredoc FDs - Temporary files</text>
  
  <!-- Arrows -->
  <line x1="400" y1="90" x2="400" y2="120" class="arrow"/>
  
  <line x1="400" y1="160" x2="110" y2="190" class="arrow"/>
  <line x1="400" y1="160" x2="250" y2="190" class="arrow"/>
  <line x1="400" y1="160" x2="400" y2="190" class="arrow"/>
  <line x1="400" y1="160" x2="550" y2="190" class="arrow"/>
  
  <line x1="110" y1="220" x2="400" y2="260" class="arrow"/>
  <line x1="250" y1="220" x2="400" y2="260" class="arrow"/>
  <line x1="400" y1="220" x2="400" y2="260" class="arrow"/>
  <line x1="550" y1="220" x2="400" y2="260" class="arrow"/>
  
  <line x1="400" y1="300" x2="400" y2="330" class="arrow"/>
  <line x1="400" y1="370" x2="400" y2="380" class="arrow"/>
  
  <!-- Builtin path -->
  <line x1="350" y1="410" x2="220" y2="480" class="yes-arrow"/>
  <text x="280" y="440" class="text" fill="#4caf50">Yes</text>
  <line x1="220" y1="520" x2="220" y2="550" class="arrow"/>
  <line x1="220" y1="630" x2="400" y2="780" class="arrow"/>
  
  <!-- External command path -->
  <line x1="450" y1="410" x2="520" y2="480" class="no-arrow"/>
  <text x="490" y="440" class="text" fill="#f44336">No</text>
  <line x1="520" y1="520" x2="430" y2="550" class="arrow"/>
  <line x1="520" y1="520" x2="550" y2="550" class="arrow"/>
  
  <!-- Fork paths -->
  <line x1="490" y1="565" x2="380" y2="620" class="arrow"/>
  <line x1="510" y1="565" x2="540" y2="620" class="arrow"/>
  
  <!-- Child process flow -->
  <line x1="380" y1="650" x2="300" y2="670" class="arrow"/>
  <line x1="380" y1="650" x2="420" y2="670" class="arrow"/>
  <line x1="300" y1="695" x2="370" y2="710" class="arrow"/>
  <line x1="420" y1="695" x2="370" y2="710" class="arrow"/>
  <line x1="370" y1="735" x2="400" y2="780" class="arrow"/>
  
  <!-- Parent process flow -->
  <line x1="540" y1="650" x2="540" y2="670" class="arrow"/>
  <line x1="540" y1="700" x2="400" y2="780" class="arrow"/>
</svg>
