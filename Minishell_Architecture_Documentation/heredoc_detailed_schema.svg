<?xml version="1.0" encoding="UTF-8"?>
<svg width="1400" height="1600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .struct-box { fill: #e8f4f8; stroke: #1976d2; stroke-width: 2; rx: 5; }
      .input-box { fill: #e8f5e8; stroke: #4caf50; stroke-width: 2; rx: 5; }
      .process-box { fill: #fff3e0; stroke: #f57c00; stroke-width: 2; rx: 5; }
      .token-box { fill: #fce4ec; stroke: #e91e63; stroke-width: 2; rx: 5; }
      .var-box { fill: #f3e5f5; stroke: #9c27b0; stroke-width: 2; rx: 5; }
      .heredoc-box { fill: #e0f2f1; stroke: #009688; stroke-width: 2; rx: 5; }
      .exec-box { fill: #fff8e1; stroke: #ff9800; stroke-width: 2; rx: 5; }
      .env-box { fill: #e8eaf6; stroke: #3f51b5; stroke-width: 2; rx: 5; }
      .text { font-family: 'Courier New', monospace; font-size: 9px; text-anchor: start; fill: #333; }
      .title { font-family: Arial, sans-serif; font-size: 11px; font-weight: bold; text-anchor: middle; fill: #333; }
      .arrow { stroke: #333; stroke-width: 2; marker-end: url(#arrowhead); }
      .link-arrow { stroke: #666; stroke-width: 1; stroke-dasharray: 3,3; marker-end: url(#arrowhead); }
      .expand-arrow { stroke: #9c27b0; stroke-width: 2; stroke-dasharray: 5,5; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="8" markerHeight="6" refX="7" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#333" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="700" y="25" class="title" font-size="16">Heredoc &amp; Variable Expansion: Struct Content Flow</text>
  <text x="700" y="45" class="title" font-size="14">Command: cat &lt;&lt; EOF &gt; $HOME/output_$USER.txt</text>
  
  <!-- Environment Variables Section -->
  <text x="700" y="80" class="title" font-size="13">Stage 1: Environment Context (t_env linked list)</text>
  
  <!-- Environment Node 1: HOME -->
  <rect x="50" y="100" width="200" height="80" class="env-box"/>
  <text x="150" y="120" class="title">env_home</text>
  <text x="55" y="135" class="text">key: "HOME"</text>
  <text x="55" y="150" class="text">value: "/home/hbou-dou"</text>
  <text x="55" y="165" class="text">next: env_user</text>
  
  <!-- Environment Node 2: USER -->
  <rect x="270" y="100" width="200" height="80" class="env-box"/>
  <text x="370" y="120" class="title">env_user</text>
  <text x="275" y="135" class="text">key: "USER"</text>
  <text x="275" y="150" class="text">value: "hbou-dou"</text>
  <text x="275" y="165" class="text">next: env_path</text>
  
  <!-- Environment Node 3: PATH -->
  <rect x="490" y="100" width="200" height="80" class="env-box"/>
  <text x="590" y="120" class="title">env_path</text>
  <text x="495" y="135" class="text">key: "PATH"</text>
  <text x="495" y="150" class="text">value: "/usr/bin:/bin"</text>
  <text x="495" y="165" class="text">next: NULL</text>
  
  <!-- Raw Input -->
  <text x="700" y="220" class="title" font-size="13">Stage 2: Raw Input &amp; Tokenization</text>
  <rect x="400" y="240" width="600" height="30" class="input-box"/>
  <text x="700" y="260" class="title">Input: "cat &lt;&lt; EOF &gt; $HOME/output_$USER.txt"</text>
  
  <!-- Token List Before Expansion -->
  <text x="700" y="300" class="title" font-size="13">Stage 3: Token List (Before Variable Expansion)</text>
  
  <!-- Token 1: cat -->
  <rect x="50" y="320" width="130" height="90" class="token-box"/>
  <text x="115" y="340" class="title">Token 1</text>
  <text x="55" y="355" class="text">type: WORD</text>
  <text x="55" y="370" class="text">value: "cat"</text>
  <text x="55" y="385" class="text">next: token2</text>
  <text x="55" y="400" class="text">previous: NULL</text>
  
  <!-- Token 2: << -->
  <rect x="200" y="320" width="130" height="90" class="token-box"/>
  <text x="265" y="340" class="title">Token 2</text>
  <text x="205" y="355" class="text">type: HERDOC</text>
  <text x="205" y="370" class="text">value: "&lt;&lt;"</text>
  <text x="205" y="385" class="text">next: token3</text>
  <text x="205" y="400" class="text">fd_reder: -1</text>
  
  <!-- Token 3: EOF -->
  <rect x="350" y="320" width="130" height="90" class="token-box"/>
  <text x="415" y="340" class="title">Token 3</text>
  <text x="355" y="355" class="text">type: DELEMTER</text>
  <text x="355" y="370" class="text">value: "EOF"</text>
  <text x="355" y="385" class="text">next: token4</text>
  <text x="355" y="400" class="text">heredoc_expn: 0</text>
  
  <!-- Token 4: > -->
  <rect x="500" y="320" width="130" height="90" class="token-box"/>
  <text x="565" y="340" class="title">Token 4</text>
  <text x="505" y="355" class="text">type: R_OUT</text>
  <text x="505" y="370" class="text">value: "&gt;"</text>
  <text x="505" y="385" class="text">next: token5</text>
  <text x="505" y="400" class="text">previous: token3</text>
  
  <!-- Token 5: $HOME/output_$USER.txt -->
  <rect x="650" y="320" width="180" height="90" class="token-box"/>
  <text x="740" y="340" class="title">Token 5 (EXPAN)</text>
  <text x="655" y="355" class="text">type: EXPAN</text>
  <text x="655" y="370" class="text">value: "$HOME/output_$USER.txt"</text>
  <text x="655" y="385" class="text">next: NULL</text>
  <text x="655" y="400" class="text">previous: token4</text>
  
  <!-- Variable Expansion Section -->
  <text x="700" y="450" class="title" font-size="13">Stage 4: Variable Expansion Process (t_var linked list)</text>
  
  <!-- Variable Node 1: $HOME -->
  <rect x="150" y="470" width="140" height="80" class="var-box"/>
  <text x="220" y="490" class="title">var1 ($HOME)</text>
  <text x="155" y="505" class="text">value: "$HOME"</text>
  <text x="155" y="520" class="text">type: VAR</text>
  <text x="155" y="535" class="text">next: var2</text>
  
  <!-- Variable Node 2: /output_ -->
  <rect x="310" y="470" width="140" height="80" class="var-box"/>
  <text x="380" y="490" class="title">var2 (literal)</text>
  <text x="315" y="505" class="text">value: "/output_"</text>
  <text x="315" y="520" class="text">type: WORD_V</text>
  <text x="315" y="535" class="text">next: var3</text>
  
  <!-- Variable Node 3: $USER -->
  <rect x="470" y="470" width="140" height="80" class="var-box"/>
  <text x="540" y="490" class="title">var3 ($USER)</text>
  <text x="475" y="505" class="text">value: "$USER"</text>
  <text x="475" y="520" class="text">type: VAR</text>
  <text x="475" y="535" class="text">next: var4</text>
  
  <!-- Variable Node 4: .txt -->
  <rect x="630" y="470" width="140" height="80" class="var-box"/>
  <text x="700" y="490" class="title">var4 (literal)</text>
  <text x="635" y="505" class="text">value: ".txt"</text>
  <text x="635" y="520" class="text">type: WORD_V</text>
  <text x="635" y="535" class="text">next: NULL</text>
  
  <!-- After Variable Expansion -->
  <text x="700" y="590" class="title" font-size="13">Stage 5: After Variable Expansion</text>
  
  <!-- Expanded Token 5 -->
  <rect x="450" y="610" width="300" height="80" class="token-box" fill="#e1f5fe"/>
  <text x="600" y="630" class="title">Token 5 (Expanded)</text>
  <text x="455" y="645" class="text">type: WORD (changed from EXPAN)</text>
  <text x="455" y="660" class="text">value: "/home/hbou-dou/output_hbou-dou.txt"</text>
  <text x="455" y="675" class="text">removed: 1 (processed)</text>
  
  <!-- Heredoc Processing Section -->
  <text x="700" y="720" class="title" font-size="13">Stage 6: Heredoc Processing (t_heredoc_ctx)</text>
  
  <!-- Heredoc Context -->
  <rect x="200" y="740" width="200" height="100" class="heredoc-box"/>
  <text x="300" y="760" class="title">Heredoc Context</text>
  <text x="205" y="775" class="text">tmp_file: "/tmp/12345678"</text>
  <text x="205" y="790" class="text">fd_in: 7 (read)</text>
  <text x="205" y="805" class="text">fd_out: 8 (write)</text>
  <text x="205" y="820" class="text">status: 0 (success)</text>
  
  <!-- User Input Collection -->
  <rect x="420" y="740" width="250" height="100" class="heredoc-box"/>
  <text x="545" y="760" class="title">User Input Collection</text>
  <text x="425" y="775" class="text">&gt; Hello World!</text>
  <text x="425" y="790" class="text">&gt; This is line 2</text>
  <text x="425" y="805" class="text">&gt; Variable expansion: hbou-dou</text>
  <text x="425" y="820" class="text">&gt; EOF (stops collection)</text>
  
  <!-- File Creation Process -->
  <rect x="690" y="740" width="200" height="100" class="heredoc-box"/>
  <text x="790" y="760" class="title">File Operations</text>
  <text x="695" y="775" class="text">1. open() -&gt; fd=8 (write)</text>
  <text x="695" y="790" class="text">2. open() -&gt; fd=7 (read)</text>
  <text x="695" y="805" class="text">3. unlink() temp file</text>
  <text x="695" y="820" class="text">4. FDs remain open</text>
  
  <!-- Updated Token After Heredoc -->
  <text x="700" y="870" class="title" font-size="13">Stage 7: Updated Token After Heredoc Processing</text>
  
  <rect x="350" y="890" width="200" height="80" class="token-box" fill="#e0f2f1"/>
  <text x="450" y="910" class="title">Token 2 (Updated)</text>
  <text x="355" y="925" class="text">type: HERDOC</text>
  <text x="355" y="940" class="text">value: "&lt;&lt;"</text>
  <text x="355" y="955" class="text">fd_reder: 7 (SET)</text>
  
  <!-- Execution Node Creation -->
  <text x="700" y="1000" class="title" font-size="13">Stage 8: Execution Node Creation (t_exec)</text>
  
  <rect x="400" y="1020" width="300" height="120" class="exec-box"/>
  <text x="550" y="1040" class="title">Single Exec Node (cat)</text>
  <text x="405" y="1055" class="text">fd_in: 7 (heredoc file)</text>
  <text x="405" y="1070" class="text">fd_out: 9 (output file)</text>
  <text x="405" y="1085" class="text">cmd: "/bin/cat"</text>
  <text x="405" y="1100" class="text">cmd_args: ["cat", NULL]</text>
  <text x="405" y="1115" class="text">next: NULL (single command)</text>
  <text x="405" y="1130" class="text">flag: 0 (no errors)</text>
  
  <!-- File Descriptor Management -->
  <rect x="750" y="1020" width="200" height="120" class="struct-box"/>
  <text x="850" y="1040" class="title">FD Management</text>
  <text x="755" y="1055" class="text">fd 0: stdin (unused)</text>
  <text x="755" y="1070" class="text">fd 1: stdout (unused)</text>
  <text x="755" y="1085" class="text">fd 2: stderr (available)</text>
  <text x="755" y="1100" class="text">fd 7: heredoc temp file</text>
  <text x="755" y="1115" class="text">fd 9: output file</text>
  <text x="755" y="1130" class="text">open() with O_CREAT|O_TRUNC</text>
  
  <!-- Process Execution -->
  <text x="700" y="1180" class="title" font-size="13">Stage 9: Process Execution</text>
  
  <!-- Parent Process -->
  <rect x="200" y="1200" width="180" height="80" class="exec-box"/>
  <text x="290" y="1220" class="title">Parent (minishell)</text>
  <text x="205" y="1235" class="text">PID: 1000</text>
  <text x="205" y="1250" class="text">close(7), close(9)</text>
  <text x="205" y="1265" class="text">waitpid(2468)</text>
  
  <!-- Child Process -->
  <rect x="400" y="1200" width="180" height="80" class="exec-box"/>
  <text x="490" y="1220" class="title">Child (cat)</text>
  <text x="405" y="1235" class="text">PID: 2468</text>
  <text x="405" y="1250" class="text">dup2(7,0), dup2(9,1)</text>
  <text x="405" y="1265" class="text">execve("/bin/cat",...)</text>
  
  <!-- File Operations -->
  <rect x="600" y="1200" width="180" height="80" class="exec-box"/>
  <text x="690" y="1220" class="title">File Operations</text>
  <text x="605" y="1235" class="text">Read from: fd=7</text>
  <text x="605" y="1250" class="text">Write to: fd=9</text>
  <text x="605" y="1265" class="text">Copy heredoc to output</text>
  
  <!-- Memory Management -->
  <text x="700" y="1310" class="title" font-size="13">Stage 10: Memory &amp; Resource Management</text>
  
  <!-- Memory Chain -->
  <rect x="150" y="1330" width="250" height="100" class="struct-box"/>
  <text x="275" y="1350" class="title">Memory Tracking (t_memory)</text>
  <text x="155" y="1365" class="text">Node 1: 0x7f8b4c001000 (tokens)</text>
  <text x="155" y="1380" class="text">Node 2: 0x7f8b4c001100 (expanded_path)</text>
  <text x="155" y="1395" class="text">Node 3: 0x7f8b4c001200 (exec_node)</text>
  <text x="155" y="1410" class="text">Node 4: 0x7f8b4c001300 (tmp_file_path)</text>
  
  <!-- Cleanup Process -->
  <rect x="420" y="1330" width="200" height="100" class="struct-box"/>
  <text x="520" y="1350" class="title">Cleanup Process</text>
  <text x="425" y="1365" class="text">1. close(fd_in), close(fd_out)</text>
  <text x="425" y="1380" class="text">2. ft_malloc(0, CLEAR_DATA)</text>
  <text x="425" y="1395" class="text">3. shell_ctx-&gt;lst = NULL</text>
  <text x="425" y="1410" class="text">4. shell_ctx-&gt;exec = NULL</text>
  
  <!-- Final Result -->
  <rect x="640" y="1330" width="200" height="100" class="input-box"/>
  <text x="740" y="1350" class="title">Final Result</text>
  <text x="645" y="1365" class="text">Output file created:</text>
  <text x="645" y="1380" class="text">/home/hbou-dou/output_</text>
  <text x="645" y="1395" class="text">hbou-dou.txt</text>
  <text x="645" y="1410" class="text">Exit status: 0</text>
  
  <!-- Final State -->
  <rect x="860" y="1330" width="200" height="100" class="struct-box"/>
  <text x="960" y="1350" class="title">Shell Final State</text>
  <text x="865" y="1365" class="text">input: preserved</text>
  <text x="865" y="1380" class="text">lst: NULL (cleaned)</text>
  <text x="865" y="1395" class="text">exec: NULL (cleaned)</text>
  <text x="865" y="1410" class="text">envp: preserved</text>
  
  <!-- Flow arrows -->
  <line x1="250" y1="180" x2="370" y2="180" class="link-arrow"/>
  <line x1="470" y1="180" x2="590" y2="180" class="link-arrow"/>
  
  <line x1="700" y1="270" x2="700" y2="300" class="arrow"/>
  
  <line x1="180" y1="365" x2="200" y2="365" class="link-arrow"/>
  <line x1="330" y1="365" x2="350" y2="365" class="link-arrow"/>
  <line x1="480" y1="365" x2="500" y2="365" class="link-arrow"/>
  <line x1="630" y1="365" x2="650" y2="365" class="link-arrow"/>
  
  <!-- Variable expansion arrows -->
  <line x1="220" y1="410" x2="220" y2="470" class="expand-arrow"/>
  <line x1="380" y1="410" x2="380" y2="470" class="expand-arrow"/>
  <line x1="540" y1="410" x2="540" y2="470" class="expand-arrow"/>
  <line x1="700" y1="410" x2="700" y2="470" class="expand-arrow"/>
  
  <line x1="290" y1="510" x2="310" y2="510" class="link-arrow"/>
  <line x1="450" y1="510" x2="470" y2="510" class="link-arrow"/>
  <line x1="610" y1="510" x2="630" y2="510" class="link-arrow"/>
  
  <!-- Environment lookup arrows -->
  <line x1="150" y1="140" x2="200" y2="490" class="expand-arrow"/>
  <line x1="370" y1="140" x2="520" y2="490" class="expand-arrow"/>
  
  <line x1="600" y1="550" x2="600" y2="590" class="arrow"/>
  <line x1="600" y1="690" x2="600" y2="720" class="arrow"/>
  <line x1="450" y1="840" x2="450" y2="870" class="arrow"/>
  <line x1="450" y1="970" x2="550" y2="1020" class="arrow"/>
  <line x1="550" y1="1140" x2="550" y2="1180" class="arrow"/>
  <line x1="490" y1="1280" x2="520" y2="1330" class="arrow"/>
  
  <!-- Legend -->
  <rect x="50" y="1480" width="1300" height="80" class="struct-box" fill="#f5f5f5"/>
  <text x="700" y="1500" class="title" font-size="12">Heredoc Processing Flow Summary</text>
  <text x="55" y="1520" class="text">Input → Environment Setup → Tokenization → Variable Expansion → Heredoc Collection → Execution Node → Process Fork → File I/O → Cleanup</text>
  <text x="55" y="1535" class="text">Key Features: • Environment variable resolution via t_env chain • Temporary file management for heredoc • Variable parsing with t_var structures</text>
  <text x="55" y="1550" class="text">• File descriptor management • Memory tracking with custom allocator • Process coordination between parent and child</text>
</svg>
