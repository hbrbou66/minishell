<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="1000" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .box { fill: #e1f5fe; stroke: #0277bd; stroke-width: 2; rx: 8; }
      .start-box { fill: #c8e6c9; stroke: #388e3c; stroke-width: 2; rx: 8; }
      .process-box { fill: #fff3e0; stroke: #f57c00; stroke-width: 2; rx: 8; }
      .decision-box { fill: #fce4ec; stroke: #c2185b; stroke-width: 2; rx: 8; }
      .final-box { fill: #c8e6c9; stroke: #388e3c; stroke-width: 3; rx: 8; }
      .text { font-family: Arial, sans-serif; font-size: 12px; text-anchor: middle; fill: #333; }
      .title { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; text-anchor: middle; fill: #333; }
      .arrow { stroke: #333; stroke-width: 2; marker-end: url(#arrowhead); }
      .error-arrow { stroke: #d32f2f; stroke-width: 2; stroke-dasharray: 5,5; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="400" y="25" class="title" font-size="18">Minishell Parsing Schema</text>
  
  <!-- Input Stage -->
  <rect x="300" y="50" width="200" height="40" class="start-box"/>
  <text x="400" y="75" class="title">User Input (readline)</text>
  
  <!-- Syntax Validation Stage -->
  <rect x="280" y="120" width="240" height="40" class="process-box"/>
  <text x="400" y="145" class="title">Syntax Validation (ft_parse_command)</text>
  
  <rect x="50" y="190" width="150" height="30" class="box"/>
  <text x="125" y="210" class="text">Quote Check</text>
  
  <rect x="220" y="190" width="150" height="30" class="box"/>
  <text x="295" y="210" class="text">Bracket Check</text>
  
  <rect x="390" y="190" width="150" height="30" class="box"/>
  <text x="465" y="210" class="text">Operator Check</text>
  
  <rect x="560" y="190" width="150" height="30" class="box"/>
  <text x="635" y="210" class="text">Syntax Check</text>
  
  <!-- Tokenization Stage -->
  <rect x="300" y="260" width="200" height="40" class="process-box"/>
  <text x="400" y="285" class="title">Split Command (ft_split)</text>
  
  <rect x="300" y="330" width="200" height="40" class="process-box"/>
  <text x="400" y="355" class="title">Create Token List (s_cmd)</text>
  
  <rect x="300" y="400" width="200" height="40" class="process-box"/>
  <text x="400" y="425" class="title">Assign Token Types</text>
  
  <!-- Token List -->
  <rect x="280" y="470" width="240" height="40" class="decision-box"/>
  <text x="400" y="495" class="title">Raw Token List (t_token *)</text>
  
  <!-- Expansion Stage -->
  <rect x="280" y="540" width="240" height="40" class="process-box"/>
  <text x="400" y="565" class="title">Variable Expansion (ft_expand)</text>
  
  <rect x="50" y="610" width="140" height="30" class="box"/>
  <text x="120" y="630" class="text">Var Substitution</text>
  
  <rect x="210" y="610" width="120" height="30" class="box"/>
  <text x="270" y="630" class="text">Quote Removal</text>
  
  <rect x="350" y="610" width="140" height="30" class="box"/>
  <text x="420" y="630" class="text">Heredoc Handling</text>
  
  <rect x="510" y="610" width="120" height="30" class="box"/>
  <text x="570" y="630" class="text">Type Conversion</text>
  
  <!-- Final Result -->
  <rect x="250" y="680" width="300" height="50" class="final-box"/>
  <text x="400" y="705" class="title">Processed Token List</text>
  <text x="400" y="720" class="text">(Ready for Execution)</text>
  
  <!-- Token Types Legend -->
  <rect x="50" y="760" width="300" height="200" class="box" fill="#f5f5f5"/>
  <text x="200" y="780" class="title">Token Types</text>
  
  <text x="70" y="800" class="text" text-anchor="start">• WORD - Regular commands/arguments</text>
  <text x="70" y="820" class="text" text-anchor="start">• PIPE - | operator</text>
  <text x="70" y="840" class="text" text-anchor="start">• R_IN - &lt; input redirection</text>
  <text x="70" y="860" class="text" text-anchor="start">• R_OUT - &gt; output redirection</text>
  <text x="70" y="880" class="text" text-anchor="start">• APPEND - &gt;&gt; append redirection</text>
  <text x="70" y="900" class="text" text-anchor="start">• HERDOC - &lt;&lt; heredoc</text>
  <text x="70" y="920" class="text" text-anchor="start">• EXPAN - $VARIABLE expansion</text>
  <text x="70" y="940" class="text" text-anchor="start">• QUOTES - 'single' "double" quotes</text>
  
  <!-- Data Structure Info -->
  <rect x="400" y="760" width="350" height="200" class="box" fill="#f5f5f5"/>
  <text x="575" y="780" class="title">Key Data Structure: t_token</text>
  
  <text x="420" y="800" class="text" text-anchor="start">typedef struct s_token {</text>
  <text x="430" y="820" class="text" text-anchor="start">t_tokentype type;</text>
  <text x="430" y="840" class="text" text-anchor="start">char *value;</text>
  <text x="430" y="860" class="text" text-anchor="start">struct s_token *next;</text>
  <text x="430" y="880" class="text" text-anchor="start">struct s_token *previous;</text>
  <text x="430" y="900" class="text" text-anchor="start">int fd_reder;</text>
  <text x="430" y="920" class="text" text-anchor="start">int heredoc_expn;</text>
  <text x="430" y="940" class="text" text-anchor="start">} t_token;</text>
  
  <!-- Arrows -->
  <line x1="400" y1="90" x2="400" y2="120" class="arrow"/>
  <line x1="400" y1="160" x2="125" y2="190" class="arrow"/>
  <line x1="400" y1="160" x2="295" y2="190" class="arrow"/>
  <line x1="400" y1="160" x2="465" y2="190" class="arrow"/>
  <line x1="400" y1="160" x2="635" y2="190" class="arrow"/>
  
  <line x1="125" y1="220" x2="400" y2="260" class="arrow"/>
  <line x1="295" y1="220" x2="400" y2="260" class="arrow"/>
  <line x1="465" y1="220" x2="400" y2="260" class="arrow"/>
  <line x1="635" y1="220" x2="400" y2="260" class="arrow"/>
  
  <line x1="400" y1="300" x2="400" y2="330" class="arrow"/>
  <line x1="400" y1="370" x2="400" y2="400" class="arrow"/>
  <line x1="400" y1="440" x2="400" y2="470" class="arrow"/>
  <line x1="400" y1="510" x2="400" y2="540" class="arrow"/>
  
  <line x1="400" y1="580" x2="120" y2="610" class="arrow"/>
  <line x1="400" y1="580" x2="270" y2="610" class="arrow"/>
  <line x1="400" y1="580" x2="420" y2="610" class="arrow"/>
  <line x1="400" y1="580" x2="570" y2="610" class="arrow"/>
  
  <line x1="120" y1="640" x2="400" y2="680" class="arrow"/>
  <line x1="270" y1="640" x2="400" y2="680" class="arrow"/>
  <line x1="420" y1="640" x2="400" y2="680" class="arrow"/>
  <line x1="570" y1="640" x2="400" y2="680" class="arrow"/>
  
  <!-- Error path -->
  <line x1="280" y1="140" x2="150" y2="75" class="error-arrow"/>
  <text x="200" y="100" class="text" fill="#d32f2f">Error</text>
</svg>
