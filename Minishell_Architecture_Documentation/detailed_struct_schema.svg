<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="1400" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .struct-box { fill: #e8f4f8; stroke: #1976d2; stroke-width: 2; rx: 5; }
      .input-box { fill: #e8f5e8; stroke: #4caf50; stroke-width: 2; rx: 5; }
      .process-box { fill: #fff3e0; stroke: #f57c00; stroke-width: 2; rx: 5; }
      .token-box { fill: #fce4ec; stroke: #e91e63; stroke-width: 2; rx: 5; }
      .exec-box { fill: #f3e5f5; stroke: #9c27b0; stroke-width: 2; rx: 5; }
      .text { font-family: 'Courier New', monospace; font-size: 10px; text-anchor: start; fill: #333; }
      .title { font-family: Arial, sans-serif; font-size: 12px; font-weight: bold; text-anchor: middle; fill: #333; }
      .arrow { stroke: #333; stroke-width: 2; marker-end: url(#arrowhead); }
      .link-arrow { stroke: #666; stroke-width: 1; stroke-dasharray: 3,3; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="8" markerHeight="6" refX="7" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#333" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="600" y="25" class="title" font-size="16">Minishell: Linked List &amp; Struct Content Flow</text>
  <text x="600" y="45" class="title" font-size="14">Command: ls -la | grep ".txt" &gt; results.txt</text>
  
  <!-- Input Stage -->
  <rect x="400" y="70" width="400" height="30" class="input-box"/>
  <text x="600" y="90" class="title">Raw Input: "ls -la | grep \".txt\" &gt; results.txt"</text>
  
  <!-- Split Array -->
  <rect x="50" y="130" width="1100" height="80" class="process-box"/>
  <text x="600" y="150" class="title">After ft_split() - String Array</text>
  
  <rect x="70" y="165" width="80" height="25" class="struct-box"/>
  <text x="75" y="180" class="text">[0] = "ls"</text>
  
  <rect x="160" y="165" width="80" height="25" class="struct-box"/>
  <text x="165" y="180" class="text">[1] = "-la"</text>
  
  <rect x="250" y="165" width="60" height="25" class="struct-box"/>
  <text x="255" y="180" class="text">[2] = "|"</text>
  
  <rect x="320" y="165" width="90" height="25" class="struct-box"/>
  <text x="325" y="180" class="text">[3] = "grep"</text>
  
  <rect x="420" y="165" width="110" height="25" class="struct-box"/>
  <text x="425" y="180" class="text">[4] = "\".txt\""</text>
  
  <rect x="540" y="165" width="60" height="25" class="struct-box"/>
  <text x="545" y="180" class="text">[5] = "&gt;"</text>
  
  <rect x="610" y="165" width="130" height="25" class="struct-box"/>
  <text x="615" y="180" class="text">[6] = "results.txt"</text>
  
  <rect x="750" y="165" width="80" height="25" class="struct-box"/>
  <text x="755" y="180" class="text">[7] = NULL</text>
  
  <!-- Token List Stage -->
  <text x="600" y="240" class="title">After s_cmd() - t_token Linked List</text>
  
  <!-- Token 1: ls -->
  <rect x="50" y="260" width="140" height="100" class="token-box"/>
  <text x="120" y="280" class="title">Token 1</text>
  <text x="55" y="295" class="text">type: WORD</text>
  <text x="55" y="310" class="text">value: "ls"</text>
  <text x="55" y="325" class="text">next: token2</text>
  <text x="55" y="340" class="text">previous: NULL</text>
  <text x="55" y="355" class="text">fd_reder: -1</text>
  
  <!-- Token 2: -la -->
  <rect x="210" y="260" width="140" height="100" class="token-box"/>
  <text x="280" y="280" class="title">Token 2</text>
  <text x="215" y="295" class="text">type: WORD</text>
  <text x="215" y="310" class="text">value: "-la"</text>
  <text x="215" y="325" class="text">next: token3</text>
  <text x="215" y="340" class="text">previous: token1</text>
  <text x="215" y="355" class="text">fd_reder: -1</text>
  
  <!-- Token 3: | -->
  <rect x="370" y="260" width="140" height="100" class="token-box"/>
  <text x="440" y="280" class="title">Token 3</text>
  <text x="375" y="295" class="text">type: PIPE</text>
  <text x="375" y="310" class="text">value: "|"</text>
  <text x="375" y="325" class="text">next: token4</text>
  <text x="375" y="340" class="text">previous: token2</text>
  <text x="375" y="355" class="text">fd_reder: -1</text>
  
  <!-- Token 4: grep -->
  <rect x="530" y="260" width="140" height="100" class="token-box"/>
  <text x="600" y="280" class="title">Token 4</text>
  <text x="535" y="295" class="text">type: WORD</text>
  <text x="535" y="310" class="text">value: "grep"</text>
  <text x="535" y="325" class="text">next: token5</text>
  <text x="535" y="340" class="text">previous: token3</text>
  <text x="535" y="355" class="text">fd_reder: -1</text>
  
  <!-- Token 5: ".txt" -->
  <rect x="690" y="260" width="140" height="100" class="token-box"/>
  <text x="760" y="280" class="title">Token 5</text>
  <text x="695" y="295" class="text">type: DOUBLE_Q</text>
  <text x="695" y="310" class="text">value: "\".txt\""</text>
  <text x="695" y="325" class="text">next: token6</text>
  <text x="695" y="340" class="text">previous: token4</text>
  <text x="695" y="355" class="text">fd_reder: -1</text>
  
  <!-- Token 6: > -->
  <rect x="850" y="260" width="140" height="100" class="token-box"/>
  <text x="920" y="280" class="title">Token 6</text>
  <text x="855" y="295" class="text">type: R_OUT</text>
  <text x="855" y="310" class="text">value: "&gt;"</text>
  <text x="855" y="325" class="text">next: token7</text>
  <text x="855" y="340" class="text">previous: token5</text>
  <text x="855" y="355" class="text">fd_reder: -1</text>
  
  <!-- Token 7: results.txt -->
  <rect x="1010" y="260" width="140" height="100" class="token-box"/>
  <text x="1080" y="280" class="title">Token 7</text>
  <text x="1015" y="295" class="text">type: RED_FILE</text>
  <text x="1015" y="310" class="text">value: "results.txt"</text>
  <text x="1015" y="325" class="text">next: NULL</text>
  <text x="1015" y="340" class="text">previous: token6</text>
  <text x="1015" y="355" class="text">fd_reder: -1</text>
  
  <!-- After Expansion -->
  <text x="600" y="400" class="title">After ft_expand() - Updated Token List</text>
  
  <!-- Updated Token 5 -->
  <rect x="400" y="420" width="200" height="80" class="token-box" fill="#e1f5fe"/>
  <text x="500" y="440" class="title">Token 5 (Updated)</text>
  <text x="405" y="455" class="text">type: WORD (changed)</text>
  <text x="405" y="470" class="text">value: ".txt" (quotes removed)</text>
  <text x="405" y="485" class="text">removed: 1 (processed)</text>
  
  <!-- Execution Nodes -->
  <text x="600" y="540" class="title">After convert_token_to_exec() - t_exec Linked List</text>
  
  <!-- Exec Node 1 -->
  <rect x="150" y="570" width="250" height="140" class="exec-box"/>
  <text x="275" y="590" class="title">Exec Node 1 (ls -la)</text>
  <text x="155" y="610" class="text">fd_in: 0 (stdin)</text>
  <text x="155" y="625" class="text">fd_out: 4 (pipe1[1])</text>
  <text x="155" y="640" class="text">cmd: "/bin/ls"</text>
  <text x="155" y="655" class="text">cmd_args[0]: "ls"</text>
  <text x="155" y="670" class="text">cmd_args[1]: "-la"</text>
  <text x="155" y="685" class="text">cmd_args[2]: NULL</text>
  <text x="155" y="700" class="text">next: exec_node2</text>
  
  <!-- Exec Node 2 -->
  <rect x="450" y="570" width="250" height="140" class="exec-box"/>
  <text x="575" y="590" class="title">Exec Node 2 (grep)</text>
  <text x="455" y="610" class="text">fd_in: 5 (pipe1[0])</text>
  <text x="455" y="625" class="text">fd_out: 6 (results.txt)</text>
  <text x="455" y="640" class="text">cmd: "/bin/grep"</text>
  <text x="455" y="655" class="text">cmd_args[0]: "grep"</text>
  <text x="455" y="670" class="text">cmd_args[1]: ".txt"</text>
  <text x="455" y="685" class="text">cmd_args[2]: NULL</text>
  <text x="455" y="700" class="text">next: NULL</text>
  
  <!-- File Descriptor Setup -->
  <rect x="750" y="570" width="200" height="140" class="struct-box"/>
  <text x="850" y="590" class="title">File Descriptors</text>
  <text x="755" y="610" class="text">pipe1[2]:</text>
  <text x="755" y="625" class="text">  [0] = 5 (read)</text>
  <text x="755" y="640" class="text">  [1] = 4 (write)</text>
  <text x="755" y="655" class="text"></text>
  <text x="755" y="670" class="text">results_fd = 6</text>
  <text x="755" y="685" class="text">  (O_CREAT|O_TRUNC)</text>
  <text x="755" y="700" class="text">  (mode: 0644)</text>
  
  <!-- Process Tree -->
  <text x="600" y="750" class="title">Process Execution Tree</text>
  
  <!-- Parent Process -->
  <rect x="450" y="770" width="200" height="60" class="struct-box"/>
  <text x="550" y="790" class="title">Parent (minishell)</text>
  <text x="455" y="805" class="text">PID: 1000</text>
  <text x="455" y="820" class="text">Waiting for children</text>
  
  <!-- Child Process 1 -->
  <rect x="200" y="870" width="200" height="80" class="exec-box"/>
  <text x="300" y="890" class="title">Child 1 (ls)</text>
  <text x="205" y="905" class="text">PID: 1234</text>
  <text x="205" y="920" class="text">fd_in: 0, fd_out: 4</text>
  <text x="205" y="935" class="text">execve("/bin/ls", ...)</text>
  
  <!-- Child Process 2 -->
  <rect x="450" y="870" width="200" height="80" class="exec-box"/>
  <text x="550" y="890" class="title">Child 2 (grep)</text>
  <text x="455" y="905" class="text">PID: 1235</text>
  <text x="455" y="920" class="text">fd_in: 5, fd_out: 6</text>
  <text x="455" y="935" class="text">execve("/bin/grep", ...)</text>
  
  <!-- Environment List -->
  <rect x="750" y="770" width="200" height="180" class="struct-box"/>
  <text x="850" y="790" class="title">Environment (t_env)</text>
  <text x="755" y="810" class="text">PATH:</text>
  <text x="755" y="825" class="text">  "/usr/bin:/bin"</text>
  <text x="755" y="840" class="text">  next: user_node</text>
  <text x="755" y="855" class="text"></text>
  <text x="755" y="870" class="text">USER:</text>
  <text x="755" y="885" class="text">  "hbou-dou"</text>
  <text x="755" y="900" class="text">  next: home_node</text>
  <text x="755" y="915" class="text"></text>
  <text x="755" y="930" class="text">HOME:</text>
  <text x="755" y="945" class="text">  "/home/hbou-dou"</text>
  
  <!-- Memory Tracking -->
  <rect x="50" y="980" width="300" height="120" class="struct-box"/>
  <text x="200" y="1000" class="title">Memory Tracking (t_memory)</text>
  <text x="55" y="1020" class="text">Node 1: addr=0x7f8b4c000010 (tokens)</text>
  <text x="55" y="1035" class="text">Node 2: addr=0x7f8b4c000020 (cmd_args)</text>
  <text x="55" y="1050" class="text">Node 3: addr=0x7f8b4c000030 (paths)</text>
  <text x="55" y="1065" class="text">Node 4: addr=0x7f8b4c000040 (exec_nodes)</text>
  <text x="55" y="1080" class="text">All tracked for cleanup</text>
  
  <!-- Signal Context -->
  <rect x="400" y="980" width="250" height="120" class="struct-box"/>
  <text x="525" y="1000" class="title">Signal Context</text>
  <text x="405" y="1020" class="text">current_child: 1234</text>
  <text x="405" y="1035" class="text">pipe_fds: [4, 5, 6, -1]</text>
  <text x="405" y="1050" class="text">in_heredoc: false</text>
  <text x="405" y="1065" class="text">SIGINT -> handler()</text>
  <text x="405" y="1080" class="text">SIGQUIT -> SIG_IGN</text>
  
  <!-- Results -->
  <rect x="700" y="980" width="200" height="120" class="input-box"/>
  <text x="800" y="1000" class="title">Final Results</text>
  <text x="705" y="1020" class="text">results.txt contains:</text>
  <text x="705" y="1035" class="text">  file1.txt</text>
  <text x="705" y="1050" class="text">  document.txt</text>
  <text x="705" y="1065" class="text">  readme.txt</text>
  <text x="705" y="1080" class="text">Exit status: 0</text>
  
  <!-- Arrows showing flow -->
  <line x1="600" y1="100" x2="600" y2="130" class="arrow"/>
  <line x1="600" y1="210" x2="600" y2="240" class="arrow"/>
  <line x1="600" y1="360" x2="500" y2="420" class="arrow"/>
  <line x1="500" y1="500" x2="600" y2="540" class="arrow"/>
  <line x1="575" y1="710" x2="550" y2="770" class="arrow"/>
  <line x1="550" y1="830" x2="300" y2="870" class="arrow"/>
  <line x1="550" y1="830" x2="550" y2="870" class="arrow"/>
  <line x1="300" y1="950" x2="525" y2="980" class="arrow"/>
  <line x1="550" y1="950" x2="800" y2="980" class="arrow"/>
  
  <!-- Linked list connections -->
  <line x1="190" y1="310" x2="210" y2="310" class="link-arrow"/>
  <line x1="350" y1="310" x2="370" y2="310" class="link-arrow"/>
  <line x1="510" y1="310" x2="530" y2="310" class="link-arrow"/>
  <line x1="670" y1="310" x2="690" y2="310" class="link-arrow"/>
  <line x1="830" y1="310" x2="850" y2="310" class="link-arrow"/>
  <line x1="990" y1="310" x2="1010" y2="310" class="link-arrow"/>
  
  <!-- Exec node connection -->
  <line x1="400" y1="640" x2="450" y2="640" class="link-arrow"/>
  
  <!-- Legend -->
  <rect x="50" y="1130" width="900" height="60" class="struct-box" fill="#f5f5f5"/>
  <text x="500" y="1150" class="title">Data Flow: Input → Split → Tokenize → Expand → Exec Nodes → Fork/Exec → Results</text>
  <text x="55" y="1170" class="text">• Each stage shows actual struct contents and pointer relationships</text>
  <text x="55" y="1185" class="text">• Linked lists maintain forward/backward pointers for navigation</text>
</svg>
