<?xml version="1.0" encoding="UTF-8"?>
<svg width="1400" height="1200" xmlns="http://www.w3.org/2000/svg">
  <!-- Background -->
  <rect width="1400" height="1200" fill="#f8f9fa" stroke="#dee2e6" stroke-width="2"/>
  
  <!-- Title -->
  <text x="700" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="26" font-weight="bold" fill="#212529">Minishell Heredoc Processing Workflow</text>
  
  <!-- Arrow marker definitions -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#007bff"/>
    </marker>
    <marker id="errorarrow" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#dc3545"/>
    </marker>
    <marker id="successarrow" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#28a745"/>
    </marker>
  </defs>
  
  <!-- Main Detection Phase -->
  <g id="detection-phase">
    <rect x="50" y="60" width="1300" height="180" fill="#e3f2fd" stroke="#1976d2" stroke-width="2" rx="10"/>
    <text x="700" y="85" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#1976d2">Phase 1: Heredoc Detection and Tokenization</text>
    
    <!-- Token Processing -->
    <rect x="80" y="110" width="160" height="70" fill="#2196f3" stroke="#1976d2" stroke-width="2" rx="5"/>
    <text x="160" y="135" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">ft_token_type()</text>
    <text x="160" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Identifies &lt;&lt; operator</text>
    <text x="160" y="162" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Returns HERDOC type</text>
    <text x="160" y="174" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">for &lt;&lt; tokens</text>
    
    <!-- ft_heredoc detection -->
    <rect x="280" y="110" width="160" height="70" fill="#1976d2" stroke="#0d47a1" stroke-width="2" rx="5"/>
    <text x="360" y="135" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">ft_heredoc()</text>
    <text x="360" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Checks if str[0] == '&lt;'</text>
    <text x="360" y="162" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">and str[1] == '&lt;'</text>
    <text x="360" y="174" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Returns true/false</text>
    
    <!-- s_cmd processing -->
    <rect x="480" y="110" width="160" height="70" fill="#3f51b5" stroke="#303f9f" stroke-width="2" rx="5"/>
    <text x="560" y="135" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">s_cmd()</text>
    <text x="560" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Creates token with</text>
    <text x="560" y="162" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">type = HERDOC</text>
    <text x="560" y="174" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">value = "&lt;&lt;"</text>
    
    <!-- heredoc_count -->
    <rect x="680" y="110" width="160" height="70" fill="#9c27b0" stroke="#7b1fa2" stroke-width="2" rx="5"/>
    <text x="760" y="135" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">heredoc_count()</text>
    <text x="760" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Counts HERDOC tokens</text>
    <text x="760" y="162" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Max limit: 16</text>
    <text x="760" y="174" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Returns error if &gt;= 16</text>
    
    <!-- Delimiter Token -->
    <rect x="880" y="110" width="160" height="70" fill="#673ab7" stroke="#512da8" stroke-width="2" rx="5"/>
    <text x="960" y="135" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">Delimiter Token</text>
    <text x="960" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Next token after &lt;&lt;</text>
    <text x="960" y="162" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">type = DELEMTER</text>
    <text x="960" y="174" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">value = "EOF", "END"...</text>
    
    <!-- Quote Processing -->
    <rect x="1120" y="110" width="160" height="70" fill="#e91e63" stroke="#c2185b" stroke-width="2" rx="5"/>
    <text x="1200" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">Quote Processing</text>
    <text x="1200" y="145" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">If delimiter quoted:</text>
    <text x="1200" y="157" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">heredoc_expn = 1</text>
    <text x="1200" y="169" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">(no expansion)</text>
  </g>
  
  <!-- Processing Phase -->
  <g id="processing-phase">
    <rect x="50" y="270" width="1300" height="300" fill="#e8f5e8" stroke="#2e7d32" stroke-width="2" rx="10"/>
    <text x="700" y="295" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#2e7d32">Phase 2: Heredoc Processing and File Creation</text>
    
    <!-- ft_expand entry point -->
    <rect x="80" y="320" width="180" height="80" fill="#4caf50" stroke="#388e3c" stroke-width="2" rx="5"/>
    <text x="170" y="350" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">ft_expand()</text>
    <text x="170" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Finds HERDOC tokens</text>
    <text x="170" y="377" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Calls handle_heredoc()</text>
    <text x="170" y="389" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Sets tmp-&gt;fd_reder</text>
    
    <!-- handle_heredoc -->
    <rect x="300" y="320" width="180" height="80" fill="#66bb6a" stroke="#4caf50" stroke-width="2" rx="5"/>
    <text x="390" y="350" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">handle_heredoc()</text>
    <text x="390" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Main heredoc handler</text>
    <text x="390" y="377" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Initializes context</text>
    <text x="390" y="389" text-anchor="middle" file-family="Arial, sans-serif" font-size="9" fill="white">Sets up signals</text>
    
    <!-- init_heredoc_ctx -->
    <rect x="520" y="320" width="180" height="80" fill="#81c784" stroke="#66bb6a" stroke-width="2" rx="5"/>
    <text x="610" y="345" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">init_heredoc_ctx()</text>
    <text x="610" y="360" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Creates temp file:</text>
    <text x="610" y="372" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">/tmp/&lt;unique_id&gt;</text>
    <text x="610" y="384" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Opens fd_out, fd_in</text>
    <text x="610" y="396" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">unlink() temp file</text>
    
    <!-- Signal Setup -->
    <rect x="740" y="320" width="180" height="80" fill="#a5d6a7" stroke="#81c784" stroke-width="2" rx="5"/>
    <text x="830" y="350" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">heredoc_signal()</text>
    <text x="830" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Sets SIGINT handler</text>
    <text x="830" y="377" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Handles Ctrl+C</text>
    <text x="830" y="389" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Sets g_check = 1</text>
    
    <!-- ft_heredoc_handle -->
    <rect x="960" y="320" width="180" height="80" fill="#c8e6c9" stroke="#a5d6a7" stroke-width="2" rx="5"/>
    <text x="1050" y="345" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">ft_heredoc_handle()</text>
    <text x="1050" y="360" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Main input loop</text>
    <text x="1050" y="372" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">readline("&gt; ")</text>
    <text x="1050" y="384" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Until delimiter match</text>
    <text x="1050" y="396" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">or EOF/Ctrl+C</text>
    
    <!-- Data Structures -->
    <rect x="80" y="420" width="280" height="120" fill="#f1f8e9" stroke="#689f38" stroke-width="2" rx="5"/>
    <text x="220" y="445" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#689f38">t_heredoc_ctx Structure</text>
    <text x="100" y="465" font-family="Arial, sans-serif" font-size="10" fill="#33691e">â€¢ tmp_file: "/tmp/&lt;unique_id&gt;"</text>
    <text x="100" y="480" font-family="Arial, sans-serif" font-size="10" fill="#33691e">â€¢ fd_out: Write to temp file</text>
    <text x="100" y="495" font-family="Arial, sans-serif" font-size="10" fill="#33691e">â€¢ fd_in: Read from temp file</text>
    <text x="100" y="510" font-family="Arial, sans-serif" font-size="10" fill="#33691e">â€¢ status: Error tracking</text>
    <text x="100" y="525" font-family="Arial, sans-serif" font-size="10" fill="#33691e">File unlinked after creation</text>
    
    <!-- Token Structure -->
    <rect x="380" y="420" width="280" height="120" fill="#f3e5f5" stroke="#7b1fa2" stroke-width="2" rx="5"/>
    <text x="520" y="445" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#7b1fa2">t_token Fields (Heredoc)</text>
    <text x="400" y="465" font-family="Arial, sans-serif" font-size="10" fill="#4a148c">â€¢ type: HERDOC</text>
    <text x="400" y="480" font-family="Arial, sans-serif" font-size="10" fill="#4a148c">â€¢ value: "&lt;&lt;"</text>
    <text x="400" y="495" font-family="Arial, sans-serif" font-size="10" fill="#4a148c">â€¢ fd_reder: File descriptor</text>
    <text x="400" y="510" font-family="Arial, sans-serif" font-size="10" fill="#4a148c">â€¢ heredoc_expn: Expansion flag</text>
    <text x="400" y="525" font-family="Arial, sans-serif" font-size="10" fill="#4a148c">â€¢ next-&gt;value: Delimiter ("EOF")</text>
    
    <!-- Global Variables -->
    <rect x="680" y="420" width="280" height="120" fill="#fff3e0" stroke="#f57c00" stroke-width="2" rx="5"/>
    <text x="820" y="445" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#f57c00">Global State</text>
    <text x="700" y="465" font-family="Arial, sans-serif" font-size="10" fill="#e65100">â€¢ g_check: Interrupt flag</text>
    <text x="700" y="480" font-family="Arial, sans-serif" font-size="10" fill="#e65100">â€¢ STDIN backup with dup()</text>
    <text x="700" y="495" font-family="Arial, sans-serif" font-size="10" fill="#e65100">â€¢ Signal handler active</text>
    <text x="700" y="510" font-family="Arial, sans-serif" font-size="10" fill="#e65100">â€¢ Terminal raw mode</text>
    <text x="700" y="525" font-family="Arial, sans-serif" font-size="10" fill="#e65100">â€¢ Readline integration</text>
    
    <!-- File Operations -->
    <rect x="980" y="420" width="280" height="120" fill="#e8eaf6" stroke="#3f51b5" stroke-width="2" rx="5"/>
    <text x="1120" y="445" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#3f51b5">File Operations</text>
    <text x="1000" y="465" font-family="Arial, sans-serif" font-size="10" fill="#1a237e">â€¢ open("/tmp/&lt;id&gt;", O_CREAT|O_TRUNC)</text>
    <text x="1000" y="480" font-family="Arial, sans-serif" font-size="10" fill="#1a237e">â€¢ Write each line to fd_out</text>
    <text x="1000" y="495" font-family="Arial, sans-serif" font-size="10" fill="#1a237e">â€¢ fd_in for reading later</text>
    <text x="1000" y="510" font-family="Arial, sans-serif" font-size="10" fill="#1a237e">â€¢ unlink() removes file entry</text>
    <text x="1000" y="525" font-family="Arial, sans-serif" font-size="10" fill="#1a237e">â€¢ File persists via open fd</text>
  </g>
  
  <!-- Input Processing Loop -->
  <g id="input-loop">
    <rect x="50" y="600" width="1300" height="240" fill="#fff8e1" stroke="#f57c00" stroke-width="2" rx="10"/>
    <text x="700" y="625" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#f57c00">Phase 3: Input Reading and Processing Loop</text>
    
    <!-- readline loop -->
    <rect x="80" y="650" width="160" height="80" fill="#ff9800" stroke="#f57c00" stroke-width="2" rx="5"/>
    <text x="160" y="680" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">readline("&gt; ")</text>
    <text x="160" y="695" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Prompts user</text>
    <text x="160" y="707" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Reads each line</text>
    <text x="160" y="719" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Until delimiter</text>
    
    <!-- Delimiter Check Diamond -->
    <polygon points="340,650 390,690 340,730 290,690" fill="#ffc107" stroke="#ff8f00" stroke-width="2"/>
    <text x="340" y="685" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" font-weight="bold">input ==</text>
    <text x="340" y="695" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" font-weight="bold">delimiter?</text>
    
    <!-- Variable Expansion Check -->
    <polygon points="500,650 550,690 500,730 450,690" fill="#e1bee7" stroke="#8e24aa" stroke-width="2"/>
    <text x="500" y="685" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" font-weight="bold">Contains $</text>
    <text x="500" y="695" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" font-weight="bold">&amp;&amp; !expn?</text>
    
    <!-- ft_herdoc_expand -->
    <rect x="600" y="650" width="160" height="80" fill="#ab47bc" stroke="#8e24aa" stroke-width="2" rx="5"/>
    <text x="680" y="675" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="white">ft_herdoc_expand()</text>
    <text x="680" y="690" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Expands $VAR</text>
    <text x="680" y="702" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Uses get_env()</text>
    <text x="680" y="714" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Returns expanded</text>
    
    <!-- Write to file -->
    <rect x="800" y="650" width="160" height="80" fill="#26a69a" stroke="#00695c" stroke-width="2" rx="5"/>
    <text x="880" y="680" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">ft_putstr_fd()</text>
    <text x="880" y="695" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Write to fd_out</text>
    <text x="880" y="707" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Add newline</text>
    <text x="880" y="719" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Continue loop</text>
    
    <!-- Signal Check -->
    <rect x="1000" y="650" width="160" height="80" fill="#ef5350" stroke="#d32f2f" stroke-width="2" rx="5"/>
    <text x="1080" y="680" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">Signal Check</text>
    <text x="1080" y="695" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">if (g_check)</text>
    <text x="1080" y="707" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Ctrl+C pressed</text>
    <text x="1080" y="719" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Exit with 130</text>
    
    <!-- EOF Check -->
    <rect x="1200" y="650" width="120" height="80" fill="#42a5f5" stroke="#1976d2" stroke-width="2" rx="5"/>
    <text x="1260" y="680" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">EOF Check</text>
    <text x="1260" y="695" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">if (!input)</text>
    <text x="1260" y="707" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Ctrl+D</text>
    <text x="1260" y="719" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Break loop</text>
    
    <!-- Expansion Details -->
    <rect x="80" y="750" width="600" height="70" fill="#f3e5f5" stroke="#7b1fa2" stroke-width="2" rx="5"/>
    <text x="380" y="775" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#7b1fa2">Variable Expansion Logic</text>
    <text x="100" y="795" font-family="Arial, sans-serif" font-size="10" fill="#4a148c">â€¢ Scan for '$' followed by valid identifier (check_id())</text>
    <text x="100" y="807" font-family="Arial, sans-serif" font-size="10" fill="#4a148c">â€¢ Extract variable name using variable_skip() and subs()</text>
    <text x="400" y="795" font-family="Arial, sans-serif" font-size="10" fill="#4a148c">â€¢ Lookup in environment using get_env()</text>
    <text x="400" y="807" font-family="Arial, sans-serif" font-size="10" fill="#4a148c">â€¢ Replace with value using strj() concatenation</text>
    
    <!-- Error Handling -->
    <rect x="700" y="750" width="600" height="70" fill="#ffebee" stroke="#d32f2f" stroke-width="2" rx="5"/>
    <text x="1000" y="775" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#d32f2f">Error Handling &amp; Cleanup</text>
    <text x="720" y="795" font-family="Arial, sans-serif" font-size="10" fill="#b71c1c">â€¢ SIGINT: close(0), rl_on_new_line(), restore STDIN</text>
    <text x="720" y="807" font-family="Arial, sans-serif" font-size="10" fill="#b71c1c">â€¢ EOF: Normal exit, clean close of file descriptors</text>
    <text x="1020" y="795" font-family="Arial, sans-serif" font-size="10" fill="#b71c1c">â€¢ File errors: skip_till_pipe(), return -1</text>
    <text x="1020" y="807" font-family="Arial, sans-serif" font-size="10" fill="#b71c1c">â€¢ Memory cleanup: free(input), ft_malloc(0, CLEAR_DATA)</text>
  </g>
  
  <!-- Final Phase -->
  <g id="final-phase">
    <rect x="50" y="870" width="1300" height="180" fill="#e8f5e8" stroke="#2e7d32" stroke-width="2" rx="10"/>
    <text x="700" y="895" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#2e7d32">Phase 4: File Descriptor Return and Integration</text>
    
    <!-- Success Path -->
    <rect x="80" y="920" width="200" height="80" fill="#4caf50" stroke="#388e3c" stroke-width="2" rx="5"/>
    <text x="180" y="950" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">Success Return</text>
    <text x="180" y="965" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">close(fd_out)</text>
    <text x="180" y="977" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Return ctx.fd_in</text>
    <text x="180" y="989" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">File ready for reading</text>
    
    <!-- Error Path -->
    <rect x="320" y="920" width="200" height="80" fill="#f44336" stroke="#d32f2f" stroke-width="2" rx="5"/>
    <text x="420" y="950" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">Error Return</text>
    <text x="420" y="965" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">close(fd_in)</text>
    <text x="420" y="977" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Return -2 (SIGINT)</text>
    <text x="420" y="989" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">or -1 (file error)</text>
    
    <!-- Token Update -->
    <rect x="560" y="920" width="200" height="80" fill="#9c27b0" stroke="#7b1fa2" stroke-width="2" rx="5"/>
    <text x="660" y="950" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">Token Update</text>
    <text x="660" y="965" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">tmp-&gt;fd_reder = fd_in</text>
    <text x="660" y="977" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Links file to token</text>
    <text x="660" y="989" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">For later execution</text>
    
    <!-- Execution Phase -->
    <rect x="800" y="920" width="200" height="80" fill="#ff9800" stroke="#f57c00" stroke-width="2" rx="5"/>
    <text x="900" y="945" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">Execution Phase</text>
    <text x="900" y="960" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">convert_token_to_exec()</text>
    <text x="900" y="972" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">Uses fd_reder as</text>
    <text x="900" y="984" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">stdin for command</text>
    <text x="900" y="996" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">dup2(fd_reder, 0)</text>
    
    <!-- Memory Management -->
    <rect x="1040" y="920" width="200" height="80" fill="#607d8b" stroke="#455a64" stroke-width="2" rx="5"/>
    <text x="1140" y="950" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">Memory Cleanup</text>
    <text x="1140" y="965" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">free(input)</text>
    <text x="1140" y="977" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">free(expanded)</text>
    <text x="1140" y="989" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">ft_malloc tracked</text>
  </g>
  
  <!-- Flow Arrows -->
  <!-- Detection Phase Arrows -->
  <path d="M 240 145 L 270 145" stroke="#007bff" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 440 145 L 470 145" stroke="#007bff" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 640 145 L 670 145" stroke="#007bff" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 840 145 L 870 145" stroke="#007bff" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 1040 145 L 1110 145" stroke="#007bff" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  
  <!-- Processing Phase Arrows -->
  <path d="M 260 360 L 290 360" stroke="#28a745" stroke-width="2" fill="none" marker-end="url(#successarrow)"/>
  <path d="M 480 360 L 510 360" stroke="#28a745" stroke-width="2" fill="none" marker-end="url(#successarrow)"/>
  <path d="M 700 360 L 730 360" stroke="#28a745" stroke-width="2" fill="none" marker-end="url(#successarrow)"/>
  <path d="M 920 360 L 950 360" stroke="#28a745" stroke-width="2" fill="none" marker-end="url(#successarrow)"/>
  
  <!-- Phase transitions -->
  <path d="M 700 240 L 700 260" stroke="#007bff" stroke-width="3" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 700 570 L 700 590" stroke="#f57c00" stroke-width="3" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 700 840 L 700 860" stroke="#28a745" stroke-width="3" fill="none" marker-end="url(#arrowhead)"/>
  
  <!-- Input Loop Arrows -->
  <path d="M 240 690 L 280 690" stroke="#ff9800" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 400 690 L 440 690" stroke="#ff9800" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 550 690 L 590 690" stroke="#8e24aa" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 760 690 L 790 690" stroke="#00695c" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 960 690 L 990 690" stroke="#d32f2f" stroke-width="2" fill="none" marker-end="url(#errorarrow)"/>
  <path d="M 1160 690 L 1190 690" stroke="#1976d2" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  
  <!-- Loop back arrow -->
  <path d="M 880 730 L 880 760 L 80 760 L 80 690 L 70 690" stroke="#ff9800" stroke-width="2" fill="none" marker-end="url(#arrowhead)" stroke-dasharray="5,5"/>
  <text x="480" y="775" font-family="Arial, sans-serif" font-size="9" fill="#f57c00">Continue reading until delimiter or EOF</text>
  
  <!-- Final Phase Arrows -->
  <path d="M 280 960 L 310 960" stroke="#4caf50" stroke-width="2" fill="none" marker-end="url(#successarrow)"/>
  <path d="M 520 960 L 550 960" stroke="#7b1fa2" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 760 960 L 790 960" stroke="#f57c00" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 1000 960 L 1030 960" stroke="#455a64" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  
  <!-- Decision flow labels -->
  <text x="340" y="635" font-family="Arial, sans-serif" font-size="9" fill="#2e7d32">YES</text>
  <text x="370" y="680" font-family="Arial, sans-serif" font-size="9" fill="#d32f2f">NO</text>
  <text x="500" y="635" font-family="Arial, sans-serif" font-size="9" fill="#8e24aa">YES</text>
  <text x="530" y="680" font-family="Arial, sans-serif" font-size="9" fill="#00695c">NO</text>
  
</svg>
